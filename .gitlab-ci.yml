image: azul/zulu-openjdk-debian:8

before_script:
  # Tell Gradle to write its files to the build directory
  - export GRADLE_USER_HOME=`pwd`/.gradle
  # Remove files that might be problematic (recommended by Travis CI)
  - rm -f  ${GRADLE_USER_HOME}/caches/modules-2/modules-2.lock
  - rm -fr ${GRADLE_USER_HOME}/caches/*/plugin-resolution/

# Some words on how caching works in GitLab CI:
#   Only sub-directories of the build directory can be added
#   to the cache. Expansion of variables does not work. We
#   will only keep the `wrapper` and `caches` sub-directories
#   of Gradle in the cache. Gradle will place those into
#   $HOME/.gradle by default. To be able to save them, they
#   need to be present in the build directory. By setting
#   `GRADLE_USER_HOME` we make Gradle place the directories
#   into a location from which we can move them to the cache
#   (and retrieve them from there again). Although the cache
#   directory is available as `/cache` you cannot directly
#   interact with it. Data will only be transferred to and
#   from the build directory. (It took me a while to get it
#   rightâ€¦)
cache:
  key: gradle
  paths:
    # Gradle wrappers and downloaded artifacts
    - .gradle/wrapper
    - .gradle/caches

stages:
  - build
  - deploy

build:
  stage: build
  script:
    - ./gradlew build
  artifacts:
    paths:
      - build/reports/
      - build/libs/orkg-*.war

.deploy_job: &deployment
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" > /etc/apt/sources.list.d/ansible.list
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367
    - apt update
    - apt -y install ansible
    # Fix permission. No idea why they are different from those in Git.
    - chmod 0755 ansible
    - cd ansible && ansible-playbook --limit $ANSIBLE_HOST site.yml

deploy to develop:
  variables:
    ANSIBLE_HOST: devel
  <<: *deployment
  environment:
    name: develop
    url: http://orkg01.develop.labs.tib.eu:8080/orkg-prototype/
  only:
    - master

deploy to production:
  variables:
    ANSIBLE_HOST: prod
  <<: *deployment
  environment:
    name: production
    url: http://orkg21.labs.tib.eu:8080/orkg-prototype/
  only:
    - master
  when: manual

pages:
  stage: deploy
  script:
    - ./gradlew asciidoctor
    - mkdir -p .public
    - cp -r build/asciidoc/html5/api-doc .public
    - mv .public public
  artifacts:
    paths:
      - public
  only:
    - master
