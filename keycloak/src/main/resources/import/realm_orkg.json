{
  "accessCodeLifespan": 60,
  "accessCodeLifespanLogin": 1800,
  "accessCodeLifespanUserAction": 300,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "accountTheme": "orkg",
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "adminEventsDetailsEnabled": false,
  "adminEventsEnabled": true,
  "adminPermissionsEnabled": false,
  "adminTheme": "",
  "attributes": {
    "acr.loa.map": "{}",
    "actionTokenGeneratedByUserLifespan.execute-actions": "",
    "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email": "",
    "actionTokenGeneratedByUserLifespan.reset-credentials": "1800",
    "actionTokenGeneratedByUserLifespan.verify-email": "1800",
    "adminEventsExpiration": "",
    "cibaAuthRequestedUserHint": "login_hint",
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "clientOfflineSessionIdleTimeout": "0",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "realmReusableOtpCode": "false",
    "shortVerificationUri": ""
  },
  "authenticationFlows": [
    {
      "alias": "Account verification options",
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Method with which to verity the existing account",
      "id": "a82945b1-68d6-47ea-95eb-314061127a15",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Browser - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "f260b106-bcb8-472d-856f-f10ab6a99fe3",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Direct Grant - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "4fba8d3a-33b8-4a56-ae59-157b20450fe4",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "First broker login - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "c54c6afc-1337-4982-b3e2-ad3d0ae63c08",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Handle Existing Account",
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "id": "0de603c9-dd00-4f9f-9d28-3f618c4ab209",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Reset - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "id": "5e2aadad-3d5e-494d-bd27-6d791372e146",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "User creation or linking",
      "authenticationExecutions": [
        {
          "authenticator": "idp-create-user-if-unique",
          "authenticatorConfig": "create unique user config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow for the existing/non-existing user alternatives",
      "id": "89daa1a0-d980-4fd5-90a0-5405d545dc0b",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reauthentication of existing account",
      "id": "bcecc62e-f076-4a00-a352-c6bcc7867330",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser",
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 25,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "browser based authentication",
      "id": "39092be8-d4c1-4511-b4da-3ae80f00d369",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "clients",
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Base authentication for clients",
      "id": "20991918-77cf-418d-b917-d7a118532649",
      "providerId": "client-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "priority": 30,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "ae9e73de-345c-4d8c-8a79-d30eb6407261",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "docker auth",
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Used by Docker clients to authenticate against the IDP",
      "id": "1336a950-a12d-4610-b3b1-d8cdcb690aef",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "first broker login",
      "authenticationExecutions": [
        {
          "authenticator": "idp-review-profile",
          "authenticatorConfig": "review profile config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "id": "2e989a4a-9071-4a6a-a8ac-37cdd3520597",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Username, password, otp and other auth forms.",
      "id": "607d6cda-3a0d-4fab-88a2-b466926f0373",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "registration",
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration flow",
      "id": "d89e5c00-ec0d-49ac-85fe-a47da22d9f6b",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration form",
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 50,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 60,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 70,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration form",
      "id": "9ad3b37c-6290-46e1-8da5-c798e2cd5b69",
      "providerId": "form-flow",
      "topLevel": false
    },
    {
      "alias": "reset credentials",
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "priority": 40,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reset credentials for a user if they forgot their password or something",
      "id": "8717a623-cbf3-4414-8cc5-15bf9d719c49",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "saml ecp",
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "SAML ECP Profile Authentication Flow",
      "id": "39ab8862-1ae0-4e77-a32f-e24483576dfc",
      "providerId": "basic-flow",
      "topLevel": true
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      },
      "id": "6ca913d7-1aa9-4c4c-a711-8a9a0155d512"
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      },
      "id": "55a76898-9a2c-4cad-a039-76541b3b4485"
    }
  ],
  "browserFlow": "browser",
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "referrerPolicy": "no-referrer",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "bruteForceProtected": true,
  "bruteForceStrategy": "MULTIPLE",
  "clientAuthenticationFlow": "clients",
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "clientPolicies": {
    "policies": []
  },
  "clientProfiles": {
    "profiles": []
  },
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clientScopes": [
    {
      "attributes": {
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add user roles to the access token",
      "id": "507a1592-d31e-4cfd-86b9-2f929272dd50",
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          },
          "consentRequired": false,
          "id": "0f6a71c4-7ac2-4148-a8c5-6a8cb7905d0a",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "65e22d74-2954-462e-9831-84d9d8fe11de",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "c1948c25-63e8-4e04-ba12-6da3d69f9bd8",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "Specific scope for a client enabled for service accounts",
      "id": "dba1d95d-7020-47e1-ae90-a68de7020592",
      "name": "service_account",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "client_id"
          },
          "consentRequired": false,
          "id": "ffe933c6-df07-4d47-b79f-7491461829c8",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost"
          },
          "consentRequired": false,
          "id": "b4a08874-2337-4cbb-9894-60e2c6ef9f83",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress"
          },
          "consentRequired": false,
          "id": "00ce9c1f-9a37-49c1-b28a-c8ac8d9d6ce9",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: phone",
      "id": "24357682-6361-4fdc-8972-6609ac531609",
      "name": "phone",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "phoneNumber",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "9ea49922-e193-4d95-a5ae-6451ed896f47",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "phoneNumberVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e868fe68-7ed9-4e17-a4f7-a9751ab8b182",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: email",
      "id": "43af0bcc-f55f-4048-8805-2caef5d9a1db",
      "name": "email",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "emailVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "5aa850dd-448c-4e62-a2b3-b40f186a3183",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "fa991fae-e44a-4bee-9e22-99ad5d0c0a96",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add all basic claims to the token",
      "id": "1e5421a8-493b-4105-b0fe-0a847ab7e64a",
      "name": "basic",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "long",
            "user.session.note": "AUTH_TIME",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b038230b-7fed-437b-b16f-79f1c6ba5fa8",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4f6ae4ca-3062-48c6-a085-15c5fd133250",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "OpenID Connect built-in scope: offline_access",
      "id": "4f1d92fa-87f7-43c4-bfcd-b80c40463aa8",
      "name": "offline_access",
      "protocol": "openid-connect"
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "id": "b1582449-03ec-4044-a1ff-d02dac1b65e3",
      "name": "acr",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "43f0f4f1-46d3-4be0-a62a-101a349128c1",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: profile",
      "id": "e4024fe2-17f4-41df-b739-85df5b5bdb63",
      "name": "profile",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "nickname",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "nickname",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "693cbb62-59a7-4dbb-9683-1ab1bdb9ca3a",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "gender",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "gender",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "2de900ca-ca4c-46f3-979f-8232410fae38",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "85858128-7524-4081-9113-d49f0bf8dd7a",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "picture",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "picture",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c39919cc-f8d3-4114-96a1-de22f3929cf4",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "5bf77cdd-ac71-4ca3-be7d-811d3a3367bf",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "zoneinfo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b9411622-9efc-41ad-8582-a660c18dacaf",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "birthdate",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "8a2d65cb-556e-4a6d-a6ff-5989b036e129",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "profile",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "profile",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "3254cf5a-cc33-4978-8b56-66c3ccc617e2",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "2d256339-fb4d-4f7d-a7e3-2480b609bed1",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "long",
            "user.attribute": "updatedAt",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "0dcfb8b6-49d7-4250-a786-7224b35c6916",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "d37b80a0-d1a0-4f85-8010-d8267d298e0f",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "website",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "website",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c89fbf61-dc66-4167-9582-7b865cdf81d4",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "28d6b925-4664-4804-86fa-340e0cdb2b30",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "middleName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "732a79f4-e5f6-4318-b371-091203af4a57",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "SAML role list",
      "id": "667d14f7-2af2-4cf4-aa91-eccfc03f1a64",
      "name": "role_list",
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "Role",
            "attribute.nameformat": "Basic",
            "single": "false"
          },
          "consentRequired": false,
          "id": "c40ff371-b613-4396-ad9a-47acbe993b86",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "true"
      },
      "description": "Microprofile - JWT built-in scope",
      "id": "fe071242-cad3-4e73-8e18-ca84629b79fb",
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "groups",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a36b1936-fa18-4773-81a9-b8325db5fcfe",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "upn",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "1eea2d4d-d02a-4539-862b-1b49cbfc0e17",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: address",
      "id": "4c5f7182-d737-41a8-b8b0-031060465364",
      "name": "address",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "user.attribute.country": "country",
            "user.attribute.formatted": "formatted",
            "user.attribute.locality": "locality",
            "user.attribute.postal_code": "postal_code",
            "user.attribute.region": "region",
            "user.attribute.street": "street",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "824cf7ab-7bd3-430b-a372-68eb21a8c85c",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "id": "cfb5e5b0-0230-463c-94c7-b22cd3e313be",
      "name": "web-origins",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          },
          "consentRequired": false,
          "id": "07719773-1aaf-46a7-9060-a93b2268d4ee",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper"
        }
      ]
    }
  ],
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clients": [
    {
      "adminUrl": "",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "acr.loa.map": "{}",
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.introspection.response.allow.jwt.claim.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "client_credentials.use_refresh_token": "false",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "+",
        "realm_client": "false",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "token.response.type.bearer.lower-case": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/orkg/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "description": "",
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "29d6008e-ffce-4580-9e93-075aa6d656cc",
      "implicitFlowEnabled": false,
      "name": "${client_account}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "/realms/orkg/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "adminUrl": "",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "acr.loa.map": "{}",
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.introspection.response.allow.jwt.claim.enabled": "false",
        "client.use.lightweight.access.token.enabled": "false",
        "client_credentials.use_refresh_token": "false",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+",
        "realm_client": "false",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "token.response.type.bearer.lower-case": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/orkg/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "description": "",
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "6ef3b771-c98c-4613-845f-884cf639fc31",
      "implicitFlowEnabled": false,
      "name": "${client_account-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "9ee2e4c6-ad80-4370-81bf-7e8fb1b54c2a",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/realms/orkg/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "adminUrl": "",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.secret.creation.time": "1729267133",
        "client.use.lightweight.access.token.enabled": "true",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "+",
        "realm_client": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "admin-cli",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "description": "",
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "f9037fc6-b677-4563-b7bf-55765ff230ad",
      "implicitFlowEnabled": false,
      "name": "${client_admin-cli}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "918d2c71-9136-42e7-b1c2-31229b009c21",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "client_id",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4c67e184-5140-4f80-becd-5f88109e9403",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "ff9126c8-6415-4f07-ba7e-9850c29374ce",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [],
      "rootUrl": "",
      "secret": "**********",
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+",
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "broker",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "39a0e17e-8024-4723-bb4b-fb50d97c31aa",
      "implicitFlowEnabled": false,
      "name": "${client_broker}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "adminUrl": "",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "access.token.lifespan": "28800",
        "acr.loa.map": "{}",
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.introspection.response.allow.jwt.claim.enabled": "false",
        "client.secret.creation.time": "1729267108",
        "client.use.lightweight.access.token.enabled": "false",
        "client_credentials.use_refresh_token": "false",
        "display.on.consent.screen": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "+",
        "realm_client": "false",
        "require.pushed.authorization.requests": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "token.response.type.bearer.lower-case": "false",
        "use.refresh.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "orkg-client",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "description": "ORKG Client to support legacy functionality",
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": true,
      "fullScopeAllowed": true,
      "id": "991974ae-8ba3-4676-8b56-fe5546601db8",
      "implicitFlowEnabled": false,
      "name": "ORKG Client (legacy functionality)",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "client_id",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a3c5031f-301f-4073-8414-4e7f29d4b807",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "d7f5fdca-6cdb-461e-a854-04727d1139cc",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "9fdfec30-a7bf-4513-9930-dffb3b7ad774",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/*"
      ],
      "rootUrl": "",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "/*"
      ]
    },
    {
      "adminUrl": "",
      "alwaysDisplayInConsole": false,
      "attributes": {
        "backchannel.logout.revoke.offline.tokens": "false",
        "backchannel.logout.session.required": "true",
        "client.secret.creation.time": "1750341192",
        "display.on.consent.screen": "false",
        "frontchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "+",
        "realm_client": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "http://localhost:3000",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "orkg-frontend",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "description": "",
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": true,
      "fullScopeAllowed": true,
      "id": "56e67384-d35a-4ffb-9b9c-cc0b349bb445",
      "implicitFlowEnabled": false,
      "name": "ORKG Frontend",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "display_name",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "lightweight.claim": "false",
            "user.attribute": "displayName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "59566d63-a6b8-4558-8722-01dfa2d59114",
          "name": "Display Name Mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [
        "http://localhost:3000/*"
      ],
      "rootUrl": "http://localhost:3000",
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+",
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "realm-management",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "434427fb-bd18-4a02-844a-f5fb310271bf",
      "implicitFlowEnabled": false,
      "name": "${client_realm-management}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "client.use.lightweight.access.token.enabled": "true",
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+",
        "realm_client": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/admin/orkg/console/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "security-admin-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "890f49b1-a51e-4b53-aee7-2b2b5e1ee851",
      "implicitFlowEnabled": false,
      "name": "${client_security-admin-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "802ae15d-14bb-4e8b-b4c4-07d7088cedb5",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/admin/orkg/console/*"
      ],
      "rootUrl": "${authAdminUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    }
  ],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "326fb2a4-c3f1-4424-8888-9c45ce0714fb",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {}
      },
      {
        "config": {
          "algorithm": [
            "HS512"
          ],
          "priority": [
            "100"
          ]
        },
        "id": "cd4953a7-23ab-41e3-9a4c-b1aae04f3678",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {}
      },
      {
        "config": {
          "algorithm": [
            "RSA-OAEP"
          ],
          "priority": [
            "100"
          ]
        },
        "id": "6257778e-831a-436e-b591-196cc60d9744",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {}
      },
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "7fb54cb3-fcc2-4f00-8f9e-f0f76f7f7e64",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {}
      }
    ],
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "config": {
          "client-uris-must-match": [
            "true"
          ],
          "host-sending-registration-request-must-match": [
            "true"
          ]
        },
        "id": "15690307-2df8-488e-8fbd-01fdecd97ec2",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "max-clients": [
            "200"
          ]
        },
        "id": "333b25e4-37b2-4bf1-ad1c-5776834b9b83",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "de60239e-f504-44a0-9cad-2bc684ead4ce",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper"
          ]
        },
        "id": "015e8bb7-66db-4d68-9a9c-f4711d7b4456",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "74f4c688-4582-47e6-b929-c67ac989fb23",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper"
          ]
        },
        "id": "6a6d631c-f286-461c-a65b-5e131561c63c",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "b4ee2576-69ac-4472-b799-93370030d85d",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "6be6a086-e90e-4c10-95b7-19c7c0b77fea",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "authenticated"
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"displayName\",\"displayName\":\"${displayName}\",\"validations\":{\"length\":{\"min\":\"1\",\"max\":\"35\"},\"person-name-prohibited-characters\":{\"error-message\":\"\"}},\"annotations\":{},\"required\":{\"roles\":[\"admin\",\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
          ]
        },
        "id": "a4b85f25-3378-4cbd-9f5b-9c90d8a5561c",
        "providerId": "declarative-user-profile",
        "subComponents": {}
      }
    ]
  },
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "defaultRole": {
    "clientRole": false,
    "composite": true,
    "containerId": "fdbf983d-64ce-4a8e-b7a0-e6500c7e3e36",
    "description": "${role_default-roles}",
    "id": "cc0970c9-f7ce-4231-8d18-b92b886e7c65",
    "name": "default-roles-orkg"
  },
  "defaultSignatureAlgorithm": "RS256",
  "directGrantFlow": "direct grant",
  "displayName": "Open Research Knowledge Graph (ORKG)",
  "displayNameHtml": "<a class=\"kc-logo-text\" id=\"logo\" href=\"https://orkg.org\"></a>",
  "dockerAuthenticationFlow": "docker auth",
  "duplicateEmailsAllowed": false,
  "editUsernameAllowed": true,
  "emailTheme": "orkg",
  "enabled": true,
  "enabledEventTypes": [
    "SEND_RESET_PASSWORD",
    "UPDATE_CONSENT_ERROR",
    "GRANT_CONSENT",
    "VERIFY_PROFILE_ERROR",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "UPDATE_TOTP",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
    "RESTART_AUTHENTICATION",
    "IMPERSONATE",
    "UPDATE_PROFILE_ERROR",
    "LOGIN",
    "OAUTH2_DEVICE_VERIFY_USER_CODE",
    "UPDATE_PASSWORD_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "OAUTH2_EXTENSION_GRANT",
    "USER_DISABLED_BY_PERMANENT_LOCKOUT",
    "TOKEN_EXCHANGE",
    "AUTHREQID_TO_TOKEN",
    "LOGOUT",
    "REGISTER",
    "DELETE_ACCOUNT_ERROR",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "USER_DISABLED_BY_TEMPORARY_LOCKOUT",
    "DELETE_ACCOUNT",
    "UPDATE_PASSWORD",
    "CLIENT_DELETE",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "CLIENT_DELETE_ERROR",
    "VERIFY_EMAIL",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "EXECUTE_ACTIONS",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "FEDERATED_IDENTITY_OVERRIDE_LINK",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "OAUTH2_EXTENSION_GRANT_ERROR",
    "SEND_VERIFY_EMAIL",
    "OAUTH2_DEVICE_AUTH",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "OAUTH2_DEVICE_CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "FEDERATED_IDENTITY_OVERRIDE_LINK_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
    "UPDATE_EMAIL",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "CLIENT_UPDATE_ERROR",
    "AUTHREQID_TO_TOKEN_ERROR",
    "INVITE_ORG_ERROR",
    "UPDATE_PROFILE",
    "CLIENT_REGISTER_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "INVITE_ORG",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "RESET_PASSWORD",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "OAUTH2_DEVICE_AUTH_ERROR",
    "UPDATE_CONSENT",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "VERIFY_PROFILE",
    "GRANT_CONSENT_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "eventsEnabled": true,
  "eventsListeners": [
    "jboss-logging"
  ],
  "failureFactor": 10,
  "firstBrokerLoginFlow": "first broker login",
  "groups": [
    {
      "attributes": {},
      "clientRoles": {},
      "id": "f30a99cd-1713-400a-a54b-fdcb99eb7d49",
      "name": "admins",
      "path": "/admins",
      "realmRoles": [
        "admin"
      ],
      "subGroups": []
    },
    {
      "attributes": {},
      "clientRoles": {},
      "id": "fac2c646-bf01-43fd-8236-afc55a88d9b1",
      "name": "curators",
      "path": "/curators",
      "realmRoles": [
        "curator"
      ],
      "subGroups": []
    }
  ],
  "id": "fdbf983d-64ce-4a8e-b7a0-e6500c7e3e36",
  "identityProviderMappers": [],
  "identityProviders": [],
  "internationalizationEnabled": false,
  "keycloakVersion": "26.1.2",
  "localizationTexts": {
    "en": {
      "displayName": "Display name",
      "role_admin": "Administrators can make changes in the system directly.",
      "role_curator": "Curators can modify parts of the graph that belong to other users, and are able to set certain special flags.",
      "termsText": "I accept the <a href=\"https://orkg.org/page/terms-of-use\">Special Conditions ORKG</a>, and agree to the processing of my personal data provided here by Technische Informationsbibliothek (TIB). In accordance with the <a href=\"https://orkg.org/page/data-protection\">data protection declaration</a> as well as the <a href=\"https://orkg.org/files/infosheet-data-protection.pdf\">info sheet data protection</a>, the data is processed exclusively by TIB in order to provide services of our platform."
    }
  },
  "loginTheme": "orkg",
  "loginWithEmailAllowed": true,
  "maxDeltaTimeSeconds": 43200,
  "maxFailureWaitSeconds": 900,
  "maxTemporaryLockouts": 0,
  "minimumQuickLoginWaitSeconds": 60,
  "notBefore": 0,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespan": 5184000,
  "offlineSessionMaxLifespanEnabled": false,
  "organizationsEnabled": false,
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyCodeReusable": false,
  "otpPolicyDigits": 6,
  "otpPolicyInitialCounter": 0,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyType": "totp",
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "passwordPolicy": "length(8) and digits(1) and notUsername(undefined) and notEmail(undefined) and specialChars(1) and notContainsUsername(undefined) and upperCase(1)",
  "permanentLockout": false,
  "quickLoginCheckMilliSeconds": 1000,
  "realm": "orkg",
  "refreshTokenMaxReuse": 0,
  "registrationAllowed": true,
  "registrationEmailAsUsername": false,
  "registrationFlow": "registration",
  "rememberMe": true,
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Configure OTP",
      "priority": 10,
      "providerId": "CONFIGURE_TOTP"
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "config": {},
      "defaultAction": true,
      "enabled": true,
      "name": "Terms and Conditions",
      "priority": 20,
      "providerId": "TERMS_AND_CONDITIONS"
    },
    {
      "alias": "UPDATE_PASSWORD",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Password",
      "priority": 30,
      "providerId": "UPDATE_PASSWORD"
    },
    {
      "alias": "UPDATE_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Profile",
      "priority": 40,
      "providerId": "UPDATE_PROFILE"
    },
    {
      "alias": "VERIFY_EMAIL",
      "config": {},
      "defaultAction": true,
      "enabled": true,
      "name": "Verify Email",
      "priority": 50,
      "providerId": "VERIFY_EMAIL"
    },
    {
      "alias": "delete_account",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Delete Account",
      "priority": 60,
      "providerId": "delete_account"
    },
    {
      "alias": "webauthn-register",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register",
      "priority": 70,
      "providerId": "webauthn-register"
    },
    {
      "alias": "webauthn-register-passwordless",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register Passwordless",
      "priority": 80,
      "providerId": "webauthn-register-passwordless"
    },
    {
      "alias": "VERIFY_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Profile",
      "priority": 90,
      "providerId": "VERIFY_PROFILE"
    },
    {
      "alias": "delete_credential",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Delete Credential",
      "priority": 100,
      "providerId": "delete_credential"
    },
    {
      "alias": "update_user_locale",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update User Locale",
      "priority": 1000,
      "providerId": "update_user_locale"
    }
  ],
  "requiredCredentials": [
    "password"
  ],
  "resetCredentialsFlow": "reset credentials",
  "resetPasswordAllowed": true,
  "revokeRefreshToken": false,
  "roles": {
    "client": {
      "account": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "29d6008e-ffce-4580-9e93-075aa6d656cc",
          "description": "${role_view-consent}",
          "id": "13c16b2c-f77c-4ba3-b474-ed9350b4809b",
          "name": "view-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "29d6008e-ffce-4580-9e93-075aa6d656cc",
          "description": "${role_view-groups}",
          "id": "7736853b-940b-4d7d-bfdf-5f14a0c39514",
          "name": "view-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "29d6008e-ffce-4580-9e93-075aa6d656cc",
          "description": "${role_view-applications}",
          "id": "f8bfe7d0-24d5-407e-b600-9b862f878cdd",
          "name": "view-applications"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "29d6008e-ffce-4580-9e93-075aa6d656cc",
          "description": "${role_delete-account}",
          "id": "db0ccc49-224d-40d2-9ab3-fafcdd6ec45d",
          "name": "delete-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "containerId": "29d6008e-ffce-4580-9e93-075aa6d656cc",
          "description": "${role_manage-account}",
          "id": "464981c0-f016-4bb4-b731-de4d5dc94ba1",
          "name": "manage-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "29d6008e-ffce-4580-9e93-075aa6d656cc",
          "description": "${role_manage-account-links}",
          "id": "34414a16-f00b-47c2-b2f3-346f1915cc66",
          "name": "manage-account-links"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "containerId": "29d6008e-ffce-4580-9e93-075aa6d656cc",
          "description": "${role_manage-consent}",
          "id": "dc7b8852-bc66-4ff1-a466-4b939cce39e6",
          "name": "manage-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "29d6008e-ffce-4580-9e93-075aa6d656cc",
          "description": "${role_view-profile}",
          "id": "59ac40fe-6eee-4f1f-8f1b-ba3b18baa2dc",
          "name": "view-profile"
        }
      ],
      "account-console": [],
      "admin-cli": [],
      "broker": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "39a0e17e-8024-4723-bb4b-fb50d97c31aa",
          "description": "${role_read-token}",
          "id": "44c34d0b-e256-4ae2-b419-8f03b9096f55",
          "name": "read-token"
        }
      ],
      "orkg-client": [],
      "orkg-frontend": [],
      "realm-management": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_view-clients}",
          "id": "36067c4d-9876-4ab5-a9ef-72090584780a",
          "name": "view-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_manage-authorization}",
          "id": "286ba631-7b0b-4901-b7f7-0b6b379e6c0c",
          "name": "manage-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_impersonation}",
          "id": "1d6796e3-75f3-4797-80dd-c893955efae3",
          "name": "impersonation"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_view-realm}",
          "id": "d13abdbd-cd3b-4c60-bac1-52771cee3d32",
          "name": "view-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_manage-identity-providers}",
          "id": "9505b650-6d74-4854-a375-6ae766896bc9",
          "name": "manage-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_manage-realm}",
          "id": "77ca809d-d1de-4e2e-8946-95115d2d8e07",
          "name": "manage-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_manage-clients}",
          "id": "adc7eb5f-6711-4a14-b523-6b2d2911e040",
          "name": "manage-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_view-authorization}",
          "id": "5e804bb2-54ec-40f6-8154-8d157fa62302",
          "name": "view-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_view-users}",
          "id": "3974d5bb-76ee-4f42-9a66-8c3af22a5af9",
          "name": "view-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_create-client}",
          "id": "21c9da8f-dc49-4f9f-badd-d213d7ba9c61",
          "name": "create-client"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_manage-users}",
          "id": "ae6118cc-e708-4c21-82fd-f6b0507bb8de",
          "name": "manage-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_view-identity-providers}",
          "id": "db4b4162-9114-4755-90e4-3c3aa963ea84",
          "name": "view-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_manage-events}",
          "id": "3b695a6c-abfb-4563-96fd-c6387a512b33",
          "name": "manage-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_query-clients}",
          "id": "eadc9722-5c6e-4851-9b0e-c52447a8b5c0",
          "name": "query-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_query-groups}",
          "id": "9ebb1c61-35d9-4a0d-aeee-ba52060896e1",
          "name": "query-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_query-realms}",
          "id": "5841b678-c367-4832-ac45-4385e01f963a",
          "name": "query-realms"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_query-users}",
          "id": "dff4d7ae-1295-44cf-bdbf-535dea55cb2c",
          "name": "query-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-clients",
                "manage-authorization",
                "impersonation",
                "view-realm",
                "manage-identity-providers",
                "manage-realm",
                "manage-clients",
                "view-authorization",
                "view-users",
                "create-client",
                "manage-users",
                "view-identity-providers",
                "manage-events",
                "query-clients",
                "query-groups",
                "query-realms",
                "query-users",
                "view-events"
              ]
            }
          },
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_realm-admin}",
          "id": "76815cd1-19a5-4d75-897f-a64abc5279e0",
          "name": "realm-admin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "434427fb-bd18-4a02-844a-f5fb310271bf",
          "description": "${role_view-events}",
          "id": "a3c75001-e9a8-4f02-b18c-a460ef5d174b",
          "name": "view-events"
        }
      ],
      "security-admin-console": []
    },
    "realm": [
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "fdbf983d-64ce-4a8e-b7a0-e6500c7e3e36",
        "description": "${role_curator}",
        "id": "c532d880-7b1e-44a0-b5b5-c69c60c8b09e",
        "name": "curator"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "fdbf983d-64ce-4a8e-b7a0-e6500c7e3e36",
        "description": "${role_offline-access}",
        "id": "e1d2302e-db74-449f-bfeb-c3a51c57499d",
        "name": "offline_access"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "fdbf983d-64ce-4a8e-b7a0-e6500c7e3e36",
        "description": "${role_admin}",
        "id": "74085fd8-ec77-461c-befb-1c8caeb27cb0",
        "name": "admin"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": true,
        "composites": {
          "client": {
            "account": [
              "delete-account",
              "manage-account",
              "view-profile"
            ]
          },
          "realm": [
            "offline_access",
            "uma_authorization"
          ]
        },
        "containerId": "fdbf983d-64ce-4a8e-b7a0-e6500c7e3e36",
        "description": "${role_default-roles}",
        "id": "cc0970c9-f7ce-4231-8d18-b92b886e7c65",
        "name": "default-roles-orkg"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "fdbf983d-64ce-4a8e-b7a0-e6500c7e3e36",
        "description": "${role_uma_authorization}",
        "id": "a430a507-c433-47c1-8538-d7e492eea907",
        "name": "uma_authorization"
      }
    ]
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "smtpServer": {
    "auth": "",
    "envelopeFrom": "",
    "from": "helpdesk@orkg.org",
    "fromDisplayName": "ORKG - Open Research Knowledge Graph",
    "host": "mailserver",
    "port": "1025",
    "replyTo": "",
    "replyToDisplayName": "",
    "ssl": "false",
    "starttls": "false"
  },
  "sslRequired": "external",
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionMaxLifespanRememberMe": 0,
  "supportedLocales": [],
  "userManagedAccessAllowed": false,
  "users": [
    {
      "attributes": {
        "displayName": [
          "Example Admin"
        ]
      },
      "createdTimestamp": 1750341090618,
      "credentials": [
        {
          "createdDate": 1750341100560,
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}",
          "id": "739748bd-cb1e-487a-8cd5-44e22cd6f6c5",
          "secretData": "{\"value\":\"51zQI2a/sXIYp7FN51iR9pWcJux1tU+woiNBvHCyoqk=\",\"salt\":\"GWCrbG6gJnT9Ji64iNgJGw==\",\"additionalParameters\":{}}",
          "type": "password",
          "userLabel": "My password"
        }
      ],
      "disableableCredentialTypes": [],
      "email": "admin@example.org",
      "emailVerified": true,
      "enabled": true,
      "groups": [
        "/admins"
      ],
      "id": "9490627e-0020-4677-98df-e41306ce624e",
      "notBefore": 0,
      "realmRoles": [
        "default-roles-orkg"
      ],
      "requiredActions": [],
      "totp": false,
      "username": "admin"
    },
    {
      "attributes": {
        "displayName": [
          "Example Curator"
        ]
      },
      "createdTimestamp": 1750341046820,
      "credentials": [
        {
          "createdDate": 1750341056952,
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}",
          "id": "15c2b7cf-8650-4f77-98ca-ba983b367c68",
          "secretData": "{\"value\":\"1TtoAGHgAnWkhKiBXmewltatUKxLr0l+S4kEz7BfBWE=\",\"salt\":\"HOD9YGsfje2sLP2Z3ALlZg==\",\"additionalParameters\":{}}",
          "type": "password",
          "userLabel": "My password"
        }
      ],
      "disableableCredentialTypes": [],
      "email": "curator@example.org",
      "emailVerified": true,
      "enabled": true,
      "groups": [
        "/curators"
      ],
      "id": "75e2b49d-b948-40bc-aa2f-59837fd4fdb2",
      "notBefore": 0,
      "realmRoles": [
        "default-roles-orkg"
      ],
      "requiredActions": [],
      "totp": false,
      "username": "curator"
    },
    {
      "clientRoles": {
        "realm-management": [
          "view-users",
          "view-events"
        ]
      },
      "createdTimestamp": 1729267133125,
      "disableableCredentialTypes": [],
      "emailVerified": false,
      "enabled": true,
      "groups": [],
      "id": "84d3caa0-0f62-4321-8db3-59e1c30fe7d1",
      "notBefore": 0,
      "realmRoles": [
        "default-roles-orkg"
      ],
      "requiredActions": [
        "TERMS_AND_CONDITIONS",
        "VERIFY_EMAIL"
      ],
      "serviceAccountClientId": "admin-cli",
      "totp": false,
      "username": "service-account-admin-cli"
    },
    {
      "attributes": {
        "displayName": [
          "Example User"
        ]
      },
      "createdTimestamp": 1750340909174,
      "credentials": [
        {
          "createdDate": 1750341011196,
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}",
          "id": "95f8fcf7-5994-44d1-b721-a056d28702e3",
          "secretData": "{\"value\":\"ejcpi9yifGbtFe8DyYnffxa4oltw/Ck7Jskpo+vkl8I=\",\"salt\":\"5rtWJjGXjgLPls72Yx5KzA==\",\"additionalParameters\":{}}",
          "type": "password",
          "userLabel": "My password"
        }
      ],
      "disableableCredentialTypes": [],
      "email": "user@example.org",
      "emailVerified": true,
      "enabled": true,
      "groups": [],
      "id": "78770f3b-4d3d-4119-ba46-d6a352a09591",
      "notBefore": 0,
      "realmRoles": [
        "default-roles-orkg"
      ],
      "requiredActions": [],
      "totp": false,
      "username": "user"
    }
  ],
  "verifiableCredentialsEnabled": false,
  "verifyEmail": true,
  "waitIncrementSeconds": 60,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicyRpId": "",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyUserVerificationRequirement": "not specified"
}
