{
    "accessCodeLifespan": 60,
    "accessCodeLifespanLogin": 1800,
    "accessCodeLifespanUserAction": 300,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "accountTheme": "",
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "adminEventsDetailsEnabled": false,
    "adminEventsEnabled": true,
    "adminTheme": "",
    "attributes": {
        "acr.loa.map": "{}",
        "adminEventsExpiration": "",
        "cibaAuthRequestedUserHint": "login_hint",
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaInterval": "5",
        "clientOfflineSessionIdleTimeout": "0",
        "clientOfflineSessionMaxLifespan": "0",
        "clientSessionIdleTimeout": "0",
        "clientSessionMaxLifespan": "0",
        "frontendUrl": "",
        "oauth2DeviceCodeLifespan": "600",
        "oauth2DevicePollingInterval": "5",
        "parRequestUriLifespan": "60",
        "realmReusableOtpCode": "false"
    },
    "authenticationFlows": [
        {
            "alias": "Account verification options",
            "authenticationExecutions": [
                {
                    "authenticator": "idp-email-verification",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "ALTERNATIVE",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "autheticatorFlow": true,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "priority": 20,
                    "requirement": "ALTERNATIVE",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Method with which to verity the existing account",
            "id": "023d52bc-dcec-4ebf-a9bd-67dbccf01451",
            "providerId": "basic-flow",
            "topLevel": false
        },
        {
            "alias": "Authentication Options",
            "authenticationExecutions": [
                {
                    "authenticator": "basic-auth",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "basic-auth-otp",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 20,
                    "requirement": "DISABLED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 30,
                    "requirement": "DISABLED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Authentication options.",
            "id": "c91012ee-7a5d-41f1-a3fb-7cd47c89684f",
            "providerId": "basic-flow",
            "topLevel": false
        },
        {
            "alias": "Browser - Conditional OTP",
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 20,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Flow to determine if the OTP is required for the authentication",
            "id": "2ef19a20-247c-401b-9d75-f9cd4a4494bd",
            "providerId": "basic-flow",
            "topLevel": false
        },
        {
            "alias": "Direct Grant - Conditional OTP",
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 20,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Flow to determine if the OTP is required for the authentication",
            "id": "127eb2ed-80b1-4620-9643-b9ad20a55529",
            "providerId": "basic-flow",
            "topLevel": false
        },
        {
            "alias": "First broker login - Conditional OTP",
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 20,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Flow to determine if the OTP is required for the authentication",
            "id": "5976c8d3-5997-469b-ab9e-bf302b74e297",
            "providerId": "basic-flow",
            "topLevel": false
        },
        {
            "alias": "Handle Existing Account",
            "authenticationExecutions": [
                {
                    "authenticator": "idp-confirm-link",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "autheticatorFlow": true,
                    "flowAlias": "Account verification options",
                    "priority": 20,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "id": "732655a7-b53f-4a52-9aff-b88f4653769b",
            "providerId": "basic-flow",
            "topLevel": false
        },
        {
            "alias": "Reset - Conditional OTP",
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 20,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "id": "4b7d670e-7381-476c-9c5d-144660f8dede",
            "providerId": "basic-flow",
            "topLevel": false
        },
        {
            "alias": "User creation or linking",
            "authenticationExecutions": [
                {
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorConfig": "create unique user config",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "ALTERNATIVE",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "autheticatorFlow": true,
                    "flowAlias": "Handle Existing Account",
                    "priority": 20,
                    "requirement": "ALTERNATIVE",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Flow for the existing/non-existing user alternatives",
            "id": "da974b9f-bd9c-44ea-9c99-4545eb6d59df",
            "providerId": "basic-flow",
            "topLevel": false
        },
        {
            "alias": "Verify Existing Account by Re-authentication",
            "authenticationExecutions": [
                {
                    "authenticator": "idp-username-password-form",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "autheticatorFlow": true,
                    "flowAlias": "First broker login - Conditional OTP",
                    "priority": 20,
                    "requirement": "CONDITIONAL",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Reauthentication of existing account",
            "id": "794a3762-c53a-42d7-bc7f-cf093143e77a",
            "providerId": "basic-flow",
            "topLevel": false
        },
        {
            "alias": "browser",
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "ALTERNATIVE",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 20,
                    "requirement": "DISABLED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 25,
                    "requirement": "ALTERNATIVE",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "autheticatorFlow": true,
                    "flowAlias": "forms",
                    "priority": 30,
                    "requirement": "ALTERNATIVE",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "browser based authentication",
            "id": "ac3bc886-2dea-4e87-b542-36ac8b367d78",
            "providerId": "basic-flow",
            "topLevel": true
        },
        {
            "alias": "clients",
            "authenticationExecutions": [
                {
                    "authenticator": "client-secret",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "ALTERNATIVE",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-jwt",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 20,
                    "requirement": "ALTERNATIVE",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 30,
                    "requirement": "ALTERNATIVE",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-x509",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 40,
                    "requirement": "ALTERNATIVE",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Base authentication for clients",
            "id": "76ecca57-3aae-4e04-bb8c-7c408d49484f",
            "providerId": "client-flow",
            "topLevel": true
        },
        {
            "alias": "direct grant",
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 20,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "autheticatorFlow": true,
                    "flowAlias": "Direct Grant - Conditional OTP",
                    "priority": 30,
                    "requirement": "CONDITIONAL",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "OpenID Connect Resource Owner Grant",
            "id": "5a5765fa-5584-467e-b035-548e6302bc88",
            "providerId": "basic-flow",
            "topLevel": true
        },
        {
            "alias": "docker auth",
            "authenticationExecutions": [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Used by Docker clients to authenticate against the IDP",
            "id": "ee5dbd65-75e0-4eb0-a079-093c839376df",
            "providerId": "basic-flow",
            "topLevel": true
        },
        {
            "alias": "first broker login",
            "authenticationExecutions": [
                {
                    "authenticator": "idp-review-profile",
                    "authenticatorConfig": "review profile config",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "autheticatorFlow": true,
                    "flowAlias": "User creation or linking",
                    "priority": 20,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "id": "38b4ba72-b8d5-47fe-9a1c-7d2f7d5b2b3a",
            "providerId": "basic-flow",
            "topLevel": true
        },
        {
            "alias": "forms",
            "authenticationExecutions": [
                {
                    "authenticator": "auth-username-password-form",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional OTP",
                    "priority": 20,
                    "requirement": "CONDITIONAL",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Username, password, otp and other auth forms.",
            "id": "db964a30-d1e5-4ed2-99a5-a64a4f7a8f82",
            "providerId": "basic-flow",
            "topLevel": false
        },
        {
            "alias": "http challenge",
            "authenticationExecutions": [
                {
                    "authenticator": "no-cookie-redirect",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "autheticatorFlow": true,
                    "flowAlias": "Authentication Options",
                    "priority": 20,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "id": "452b26b9-2ad5-4233-a129-5628cd968614",
            "providerId": "basic-flow",
            "topLevel": true
        },
        {
            "alias": "registration",
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "autheticatorFlow": true,
                    "flowAlias": "registration form",
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "registration flow",
            "id": "f50e7428-a91d-4bd0-b570-2edb71389ff1",
            "providerId": "basic-flow",
            "topLevel": true
        },
        {
            "alias": "registration form",
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 20,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-profile-action",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 40,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 50,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 60,
                    "requirement": "DISABLED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "registration form",
            "id": "138a8721-4ac0-4f5f-ac1c-b0605926d0d1",
            "providerId": "form-flow",
            "topLevel": false
        },
        {
            "alias": "reset credentials",
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 20,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 30,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "autheticatorFlow": true,
                    "flowAlias": "Reset - Conditional OTP",
                    "priority": 40,
                    "requirement": "CONDITIONAL",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "Reset credentials for a user if they forgot their password or something",
            "id": "afb7dbf4-3784-4060-941d-f03c2fdd29df",
            "providerId": "basic-flow",
            "topLevel": true
        },
        {
            "alias": "saml ecp",
            "authenticationExecutions": [
                {
                    "authenticator": "http-basic-authenticator",
                    "authenticatorFlow": false,
                    "autheticatorFlow": false,
                    "priority": 10,
                    "requirement": "REQUIRED",
                    "userSetupAllowed": false
                }
            ],
            "builtIn": true,
            "description": "SAML ECP Profile Authentication Flow",
            "id": "3d8db6ad-8d59-44c8-9c05-dcd3a9c8d84c",
            "providerId": "basic-flow",
            "topLevel": true
        }
    ],
    "authenticatorConfig": [
        {
            "alias": "create unique user config",
            "config": {
                "require.password.update.after.registration": "false"
            },
            "id": "188c86d5-ad4a-422b-9286-6bf17f0b118f"
        },
        {
            "alias": "review profile config",
            "config": {
                "update.profile.on.first.login": "missing"
            },
            "id": "099f2aea-07e8-42e3-8840-fb911c27186c"
        }
    ],
    "browserFlow": "browser",
    "browserSecurityHeaders": {
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "contentSecurityPolicyReportOnly": "",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains",
        "xContentTypeOptions": "nosniff",
        "xFrameOptions": "SAMEORIGIN",
        "xRobotsTag": "none",
        "xXSSProtection": "1; mode=block"
    },
    "bruteForceProtected": false,
    "clientAuthenticationFlow": "clients",
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "clientPolicies": {
        "policies": []
    },
    "clientProfiles": {
        "profiles": []
    },
    "clientScopeMappings": {
        "account": [
            {
                "client": "account-console",
                "roles": [
                    "manage-account",
                    "view-groups"
                ]
            }
        ]
    },
    "clientScopes": [
        {
            "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "description": "SAML role list",
            "id": "260604d3-ce38-4405-a7ef-2682ace33760",
            "name": "role_list",
            "protocol": "saml",
            "protocolMappers": [
                {
                    "config": {
                        "attribute.name": "Role",
                        "attribute.nameformat": "Basic",
                        "single": "false"
                    },
                    "consentRequired": false,
                    "id": "351e3158-7807-41f7-9b1e-532053f57daf",
                    "name": "role list",
                    "protocol": "saml",
                    "protocolMapper": "saml-role-list-mapper"
                }
            ]
        },
        {
            "attributes": {
                "display.on.consent.screen": "false",
                "include.in.token.scope": "false"
            },
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "id": "8c8f7804-9d13-4d25-ad9c-fa562d5be09d",
            "name": "acr",
            "protocol": "openid-connect",
            "protocolMappers": [
                {
                    "config": {
                        "access.token.claim": "true",
                        "id.token.claim": "true",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "bb26ad97-3d42-48e0-a67a-50247953f6a5",
                    "name": "acr loa level",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-acr-mapper"
                }
            ]
        },
        {
            "attributes": {
                "consent.screen.text": "${emailScopeConsentText}",
                "display.on.consent.screen": "true",
                "include.in.token.scope": "true"
            },
            "description": "OpenID Connect built-in scope: email",
            "id": "50dae83c-ef73-44bd-b90b-c8d35f1ad1d8",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMappers": [
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "id.token.claim": "true",
                        "jsonType.label": "boolean",
                        "user.attribute": "emailVerified",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "62994280-93e0-40bb-a523-d5aa779abc67",
                    "name": "email verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "email",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "c564f93d-122b-40f9-892e-7266a79ad0d0",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper"
                }
            ]
        },
        {
            "attributes": {
                "consent.screen.text": "",
                "display.on.consent.screen": "false",
                "include.in.token.scope": "false"
            },
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "id": "3d65cee5-4edb-4bdb-bea7-86c09ad62963",
            "name": "web-origins",
            "protocol": "openid-connect",
            "protocolMappers": [
                {
                    "config": {},
                    "consentRequired": false,
                    "id": "d6777630-a8c6-4d52-a476-a2cada12263c",
                    "name": "allowed web origins",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-allowed-origins-mapper"
                }
            ]
        },
        {
            "attributes": {
                "consent.screen.text": "${phoneScopeConsentText}",
                "display.on.consent.screen": "true",
                "include.in.token.scope": "true"
            },
            "description": "OpenID Connect built-in scope: phone",
            "id": "8f148955-f4d9-42c9-8789-68184381bdc3",
            "name": "phone",
            "protocol": "openid-connect",
            "protocolMappers": [
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "id.token.claim": "true",
                        "jsonType.label": "boolean",
                        "user.attribute": "phoneNumberVerified",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "945956ae-85c1-4ebc-9cf9-496321f43749",
                    "name": "phone number verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "phoneNumber",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "2a59165a-8cec-4b37-ab1a-f79381c63388",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                }
            ]
        },
        {
            "attributes": {
                "display.on.consent.screen": "false",
                "include.in.token.scope": "true"
            },
            "description": "Microprofile - JWT built-in scope",
            "id": "7f3ca2b9-8f3a-4bfd-9eb9-c665cd1800f6",
            "name": "microprofile-jwt",
            "protocol": "openid-connect",
            "protocolMappers": [
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "username",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "d5f51a4c-f9f9-4db4-b4d4-913793e309a7",
                    "name": "upn",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "multivalued": "true",
                        "user.attribute": "foo",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "cab94702-18f7-435d-8ae7-e99e8145c8fa",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper"
                }
            ]
        },
        {
            "attributes": {
                "consent.screen.text": "${rolesScopeConsentText}",
                "display.on.consent.screen": "true",
                "include.in.token.scope": "false"
            },
            "description": "OpenID Connect scope for add user roles to the access token",
            "id": "bbecf935-bd06-434f-acae-4f3f223dd633",
            "name": "roles",
            "protocol": "openid-connect",
            "protocolMappers": [
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true",
                        "user.attribute": "foo"
                    },
                    "consentRequired": false,
                    "id": "96325ce8-b927-4e19-bfc2-7abfb810b8c1",
                    "name": "client roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-client-role-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true",
                        "user.attribute": "foo"
                    },
                    "consentRequired": false,
                    "id": "ec6c385f-7b8c-4692-a62b-1b264249093c",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper"
                },
                {
                    "config": {},
                    "consentRequired": false,
                    "id": "c102d8e6-461c-4567-976a-e5c0389fcdf9",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper"
                }
            ]
        },
        {
            "attributes": {
                "consent.screen.text": "${addressScopeConsentText}",
                "display.on.consent.screen": "true",
                "include.in.token.scope": "true"
            },
            "description": "OpenID Connect built-in scope: address",
            "id": "2761d2d6-543a-411b-b5f9-39c38eaff5f6",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMappers": [
                {
                    "config": {
                        "access.token.claim": "true",
                        "id.token.claim": "true",
                        "user.attribute.country": "country",
                        "user.attribute.formatted": "formatted",
                        "user.attribute.locality": "locality",
                        "user.attribute.postal_code": "postal_code",
                        "user.attribute.region": "region",
                        "user.attribute.street": "street",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "22044316-f52b-46c8-9bc5-406d7ec819d8",
                    "name": "address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-address-mapper"
                }
            ]
        },
        {
            "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "description": "OpenID Connect built-in scope: offline_access",
            "id": "e7869da7-271c-4afc-9071-f2822dc8e41b",
            "name": "offline_access",
            "protocol": "openid-connect"
        },
        {
            "attributes": {
                "consent.screen.text": "${profileScopeConsentText}",
                "display.on.consent.screen": "true",
                "include.in.token.scope": "true"
            },
            "description": "OpenID Connect built-in scope: profile",
            "id": "533ed7fe-5ab9-46f3-995f-9a33f48cd05d",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMappers": [
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "username",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "70f573bd-e25a-46f1-a986-ae091e9ed318",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "gender",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "74d162db-086d-4925-9d82-e500f39af38a",
                    "name": "gender",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "locale",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "1cbcba73-9059-4625-ba40-6edcd569861f",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "firstName",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "7caae544-8797-409d-a775-ce4df0f5b1a6",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "id.token.claim": "true",
                        "jsonType.label": "long",
                        "user.attribute": "updatedAt",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "697b886b-d8a5-4169-b51f-e554050cdb64",
                    "name": "updated at",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "zoneinfo",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "fa707c59-9f1a-4061-aafe-bc93e53e1c00",
                    "name": "zoneinfo",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "profile",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "dd7ebf05-b9b1-4d22-95b0-520539cf9bf1",
                    "name": "profile",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "id.token.claim": "true",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "a934f8b6-f708-44fb-a134-d92845c6b3a6",
                    "name": "full name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-full-name-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "nickname",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "d81f71a1-d2c3-48a7-9adb-0f0bf6021bf9",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "website",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "6d1139a8-ae4d-4521-8f3f-7549ae29f287",
                    "name": "website",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "picture",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "70eea5bb-9f7f-4ddb-872b-3ef6b5bb5654",
                    "name": "picture",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "lastName",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "75131d3b-1a53-4f7c-b25c-82519ed7285b",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "middleName",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "c102fbad-4cac-4f83-83c0-544b8d2c5d2c",
                    "name": "middle name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                },
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "birthdate",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "61a82cfa-cf07-4f11-b645-5deab9213f87",
                    "name": "birthdate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                }
            ]
        }
    ],
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clients": [
        {
            "alwaysDisplayInConsole": false,
            "attributes": {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "baseUrl": "/realms/orkg-dev/account/",
            "bearerOnly": false,
            "clientAuthenticatorType": "client-secret",
            "clientId": "account",
            "consentRequired": false,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "email"
            ],
            "directAccessGrantsEnabled": false,
            "enabled": true,
            "frontchannelLogout": false,
            "fullScopeAllowed": false,
            "id": "47f21b69-3eec-4b73-a1c3-aecfef781b01",
            "implicitFlowEnabled": false,
            "name": "${client_account}",
            "nodeReRegistrationTimeout": 0,
            "notBefore": 0,
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ],
            "protocol": "openid-connect",
            "publicClient": true,
            "redirectUris": [
                "/realms/orkg-dev/account/*"
            ],
            "rootUrl": "${authBaseUrl}",
            "serviceAccountsEnabled": false,
            "standardFlowEnabled": true,
            "surrogateAuthRequired": false,
            "webOrigins": []
        },
        {
            "alwaysDisplayInConsole": false,
            "attributes": {
                "pkce.code.challenge.method": "S256",
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "baseUrl": "/realms/orkg-dev/account/",
            "bearerOnly": false,
            "clientAuthenticatorType": "client-secret",
            "clientId": "account-console",
            "consentRequired": false,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "email"
            ],
            "directAccessGrantsEnabled": false,
            "enabled": true,
            "frontchannelLogout": false,
            "fullScopeAllowed": false,
            "id": "308b0407-28b4-4603-a0dc-7304e4b26087",
            "implicitFlowEnabled": false,
            "name": "${client_account-console}",
            "nodeReRegistrationTimeout": 0,
            "notBefore": 0,
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ],
            "protocol": "openid-connect",
            "protocolMappers": [
                {
                    "config": {},
                    "consentRequired": false,
                    "id": "9f30588b-e3d0-4d39-99dc-f8745a6649e0",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper"
                }
            ],
            "publicClient": true,
            "redirectUris": [
                "/realms/orkg-dev/account/*"
            ],
            "rootUrl": "${authBaseUrl}",
            "serviceAccountsEnabled": false,
            "standardFlowEnabled": true,
            "surrogateAuthRequired": false,
            "webOrigins": []
        },
        {
            "alwaysDisplayInConsole": false,
            "attributes": {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "bearerOnly": false,
            "clientAuthenticatorType": "client-secret",
            "clientId": "admin-cli",
            "consentRequired": false,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "email"
            ],
            "directAccessGrantsEnabled": true,
            "enabled": true,
            "frontchannelLogout": false,
            "fullScopeAllowed": false,
            "id": "19d88370-1b17-4467-8990-6276ab655147",
            "implicitFlowEnabled": false,
            "name": "${client_admin-cli}",
            "nodeReRegistrationTimeout": 0,
            "notBefore": 0,
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ],
            "protocol": "openid-connect",
            "publicClient": true,
            "redirectUris": [],
            "serviceAccountsEnabled": false,
            "standardFlowEnabled": false,
            "surrogateAuthRequired": false,
            "webOrigins": []
        },
        {
            "alwaysDisplayInConsole": false,
            "attributes": {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "bearerOnly": true,
            "clientAuthenticatorType": "client-secret",
            "clientId": "broker",
            "consentRequired": false,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "email"
            ],
            "directAccessGrantsEnabled": false,
            "enabled": true,
            "frontchannelLogout": false,
            "fullScopeAllowed": false,
            "id": "221fa9eb-4e8c-4353-9334-6083c44aaa49",
            "implicitFlowEnabled": false,
            "name": "${client_broker}",
            "nodeReRegistrationTimeout": 0,
            "notBefore": 0,
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ],
            "protocol": "openid-connect",
            "publicClient": false,
            "redirectUris": [],
            "serviceAccountsEnabled": false,
            "standardFlowEnabled": true,
            "surrogateAuthRequired": false,
            "webOrigins": []
        },
        {
            "adminUrl": "",
            "alwaysDisplayInConsole": false,
            "attributes": {
                "backchannel.logout.revoke.offline.tokens": "false",
                "backchannel.logout.session.required": "true",
                "client.secret.creation.time": "1683820252",
                "display.on.consent.screen": "false",
                "login_theme": "orkg",
                "oauth2.device.authorization.grant.enabled": "false",
                "oidc.ciba.grant.enabled": "false",
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "baseUrl": "http://localhost:3000",
            "bearerOnly": false,
            "clientAuthenticatorType": "client-secret",
            "clientId": "orkg-frontend",
            "consentRequired": false,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "email"
            ],
            "description": "",
            "directAccessGrantsEnabled": true,
            "enabled": true,
            "frontchannelLogout": true,
            "fullScopeAllowed": true,
            "id": "15a1e6bf-4ab0-4139-b5a8-46dbf9e77455",
            "implicitFlowEnabled": false,
            "name": "ORKG Frontend",
            "nodeReRegistrationTimeout": -1,
            "notBefore": 0,
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ],
            "protocol": "openid-connect",
            "publicClient": false,
            "redirectUris": [
                "/*"
            ],
            "rootUrl": "",
            "secret": "**********",
            "serviceAccountsEnabled": false,
            "standardFlowEnabled": true,
            "surrogateAuthRequired": false,
            "webOrigins": [
                "/*"
            ]
        },
        {
            "alwaysDisplayInConsole": false,
            "attributes": {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "bearerOnly": true,
            "clientAuthenticatorType": "client-secret",
            "clientId": "realm-management",
            "consentRequired": false,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "email"
            ],
            "directAccessGrantsEnabled": false,
            "enabled": true,
            "frontchannelLogout": false,
            "fullScopeAllowed": false,
            "id": "5db5c203-6121-46ea-af37-ac07cfaec080",
            "implicitFlowEnabled": false,
            "name": "${client_realm-management}",
            "nodeReRegistrationTimeout": 0,
            "notBefore": 0,
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ],
            "protocol": "openid-connect",
            "publicClient": false,
            "redirectUris": [],
            "serviceAccountsEnabled": false,
            "standardFlowEnabled": true,
            "surrogateAuthRequired": false,
            "webOrigins": []
        },
        {
            "alwaysDisplayInConsole": false,
            "attributes": {
                "pkce.code.challenge.method": "S256",
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "baseUrl": "/admin/orkg-dev/console/",
            "bearerOnly": false,
            "clientAuthenticatorType": "client-secret",
            "clientId": "security-admin-console",
            "consentRequired": false,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "email"
            ],
            "directAccessGrantsEnabled": false,
            "enabled": true,
            "frontchannelLogout": false,
            "fullScopeAllowed": false,
            "id": "334c898e-ad8a-4e72-9390-4dd83fdebf3d",
            "implicitFlowEnabled": false,
            "name": "${client_security-admin-console}",
            "nodeReRegistrationTimeout": 0,
            "notBefore": 0,
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ],
            "protocol": "openid-connect",
            "protocolMappers": [
                {
                    "config": {
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "id.token.claim": "true",
                        "jsonType.label": "String",
                        "user.attribute": "locale",
                        "userinfo.token.claim": "true"
                    },
                    "consentRequired": false,
                    "id": "bb01a36a-5767-4c93-9c7d-f4d1515559c8",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper"
                }
            ],
            "publicClient": true,
            "redirectUris": [
                "/admin/orkg-dev/console/*"
            ],
            "rootUrl": "${authAdminUrl}",
            "serviceAccountsEnabled": false,
            "standardFlowEnabled": true,
            "surrogateAuthRequired": false,
            "webOrigins": [
                "+"
            ]
        }
    ],
    "components": {
        "org.keycloak.keys.KeyProvider": [
            {
                "config": {
                    "algorithm": [
                        "RSA-OAEP"
                    ],
                    "priority": [
                        "100"
                    ]
                },
                "id": "62a97ddf-cb28-48f4-8f18-acd633defc9a",
                "name": "rsa-enc-generated",
                "providerId": "rsa-enc-generated",
                "subComponents": {}
            },
            {
                "config": {
                    "algorithm": [
                        "HS256"
                    ],
                    "priority": [
                        "100"
                    ]
                },
                "id": "5d1ed7c3-a12d-444d-8e4e-eefafa5a20dc",
                "name": "hmac-generated",
                "providerId": "hmac-generated",
                "subComponents": {}
            },
            {
                "config": {
                    "priority": [
                        "100"
                    ]
                },
                "id": "53ac587b-977a-423a-a699-503dab613c95",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {}
            },
            {
                "config": {
                    "priority": [
                        "100"
                    ]
                },
                "id": "b4d1c7f4-f7ed-4315-9eb8-2ffe3299f216",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {}
            }
        ],
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                },
                "id": "35d970aa-d057-4d3c-a8b0-7ffcdbd9ed57",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subComponents": {},
                "subType": "anonymous"
            },
            {
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                },
                "id": "8197cdc8-13ef-478a-b778-b7d43efe4553",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subComponents": {},
                "subType": "authenticated"
            },
            {
                "config": {
                    "max-clients": [
                        "200"
                    ]
                },
                "id": "66f925ac-4220-4589-b805-e30fdc550654",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subComponents": {},
                "subType": "anonymous"
            },
            {
                "config": {
                    "client-uris-must-match": [
                        "true"
                    ],
                    "host-sending-registration-request-must-match": [
                        "true"
                    ]
                },
                "id": "da4eb2fc-1e9d-4f45-b55b-7d3b17f165d8",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subComponents": {},
                "subType": "anonymous"
            },
            {
                "config": {
                    "allowed-protocol-mapper-types": [
                        "saml-user-attribute-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "oidc-address-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-full-name-mapper",
                        "saml-role-list-mapper",
                        "oidc-usermodel-property-mapper",
                        "saml-user-property-mapper"
                    ]
                },
                "id": "cd207b34-53a9-41f1-bfc7-4fb65a13ac15",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subComponents": {},
                "subType": "authenticated"
            },
            {
                "config": {},
                "id": "70141516-8661-4e9d-84a2-576245eba388",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subComponents": {},
                "subType": "anonymous"
            },
            {
                "config": {},
                "id": "7e8cb3f4-60a2-497a-bcf6-7017965d8212",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subComponents": {},
                "subType": "anonymous"
            },
            {
                "config": {
                    "allowed-protocol-mapper-types": [
                        "saml-user-attribute-mapper",
                        "oidc-full-name-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-role-list-mapper",
                        "oidc-address-mapper",
                        "saml-user-property-mapper",
                        "oidc-usermodel-property-mapper"
                    ]
                },
                "id": "580b53ab-0f05-45a3-9ef5-f82d34e93c39",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subComponents": {},
                "subType": "anonymous"
            }
        ],
        "org.keycloak.userprofile.UserProfileProvider": [
            {
                "config": {},
                "id": "f7268a05-5bda-4d0f-a2cf-2675558b3830",
                "providerId": "declarative-user-profile",
                "subComponents": {}
            }
        ]
    },
    "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr"
    ],
    "defaultLocale": "en",
    "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
    ],
    "defaultRole": {
        "clientRole": false,
        "composite": true,
        "containerId": "c6754611-056a-43ed-9e15-ad6b65406947",
        "description": "${role_default-roles}",
        "id": "d179d07f-8a6a-4ed4-9ac8-e69c72793bf4",
        "name": "default-roles-orkg-dev"
    },
    "defaultSignatureAlgorithm": "RS256",
    "directGrantFlow": "direct grant",
    "displayName": "ORKG",
    "displayNameHtml": "",
    "dockerAuthenticationFlow": "docker auth",
    "duplicateEmailsAllowed": false,
    "editUsernameAllowed": false,
    "emailTheme": "",
    "enabled": true,
    "enabledEventTypes": [
        "SEND_RESET_PASSWORD",
        "UPDATE_CONSENT_ERROR",
        "GRANT_CONSENT",
        "VERIFY_PROFILE_ERROR",
        "REMOVE_TOTP",
        "REVOKE_GRANT",
        "UPDATE_TOTP",
        "LOGIN_ERROR",
        "CLIENT_LOGIN",
        "RESET_PASSWORD_ERROR",
        "IMPERSONATE_ERROR",
        "CODE_TO_TOKEN_ERROR",
        "CUSTOM_REQUIRED_ACTION",
        "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
        "RESTART_AUTHENTICATION",
        "IMPERSONATE",
        "UPDATE_PROFILE_ERROR",
        "LOGIN",
        "OAUTH2_DEVICE_VERIFY_USER_CODE",
        "UPDATE_PASSWORD_ERROR",
        "CLIENT_INITIATED_ACCOUNT_LINKING",
        "TOKEN_EXCHANGE",
        "AUTHREQID_TO_TOKEN",
        "LOGOUT",
        "REGISTER",
        "DELETE_ACCOUNT_ERROR",
        "CLIENT_REGISTER",
        "IDENTITY_PROVIDER_LINK_ACCOUNT",
        "DELETE_ACCOUNT",
        "UPDATE_PASSWORD",
        "CLIENT_DELETE",
        "FEDERATED_IDENTITY_LINK_ERROR",
        "IDENTITY_PROVIDER_FIRST_LOGIN",
        "CLIENT_DELETE_ERROR",
        "VERIFY_EMAIL",
        "CLIENT_LOGIN_ERROR",
        "RESTART_AUTHENTICATION_ERROR",
        "EXECUTE_ACTIONS",
        "REMOVE_FEDERATED_IDENTITY_ERROR",
        "TOKEN_EXCHANGE_ERROR",
        "PERMISSION_TOKEN",
        "SEND_IDENTITY_PROVIDER_LINK_ERROR",
        "EXECUTE_ACTION_TOKEN_ERROR",
        "SEND_VERIFY_EMAIL",
        "OAUTH2_DEVICE_AUTH",
        "EXECUTE_ACTIONS_ERROR",
        "REMOVE_FEDERATED_IDENTITY",
        "OAUTH2_DEVICE_CODE_TO_TOKEN",
        "IDENTITY_PROVIDER_POST_LOGIN",
        "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
        "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
        "UPDATE_EMAIL",
        "REGISTER_ERROR",
        "REVOKE_GRANT_ERROR",
        "EXECUTE_ACTION_TOKEN",
        "LOGOUT_ERROR",
        "UPDATE_EMAIL_ERROR",
        "CLIENT_UPDATE_ERROR",
        "AUTHREQID_TO_TOKEN_ERROR",
        "UPDATE_PROFILE",
        "CLIENT_REGISTER_ERROR",
        "FEDERATED_IDENTITY_LINK",
        "SEND_IDENTITY_PROVIDER_LINK",
        "SEND_VERIFY_EMAIL_ERROR",
        "RESET_PASSWORD",
        "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
        "OAUTH2_DEVICE_AUTH_ERROR",
        "UPDATE_CONSENT",
        "REMOVE_TOTP_ERROR",
        "VERIFY_EMAIL_ERROR",
        "SEND_RESET_PASSWORD_ERROR",
        "CLIENT_UPDATE",
        "CUSTOM_REQUIRED_ACTION_ERROR",
        "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
        "UPDATE_TOTP_ERROR",
        "CODE_TO_TOKEN",
        "VERIFY_PROFILE",
        "GRANT_CONSENT_ERROR",
        "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
    ],
    "eventsEnabled": false,
    "eventsListeners": [
        "jboss-logging"
    ],
    "failureFactor": 30,
    "groups": [],
    "id": "c6754611-056a-43ed-9e15-ad6b65406947",
    "identityProviderMappers": [],
    "identityProviders": [],
    "internationalizationEnabled": true,
    "keycloakVersion": "22.0.3",
    "loginTheme": "keycloak",
    "loginWithEmailAllowed": true,
    "maxDeltaTimeSeconds": 43200,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "notBefore": 0,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespan": 5184000,
    "offlineSessionMaxLifespanEnabled": false,
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyCodeReusable": false,
    "otpPolicyDigits": 6,
    "otpPolicyInitialCounter": 0,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyType": "totp",
    "otpSupportedApplications": [
        "totpAppMicrosoftAuthenticatorName",
        "totpAppFreeOTPName",
        "totpAppGoogleName"
    ],
    "permanentLockout": false,
    "quickLoginCheckMilliSeconds": 1000,
    "realm": "orkg-dev",
    "refreshTokenMaxReuse": 0,
    "registrationAllowed": true,
    "registrationEmailAsUsername": false,
    "registrationFlow": "registration",
    "rememberMe": false,
    "requiredActions": [
        {
            "alias": "CONFIGURE_TOTP",
            "config": {},
            "defaultAction": false,
            "enabled": true,
            "name": "Configure OTP",
            "priority": 10,
            "providerId": "CONFIGURE_TOTP"
        },
        {
            "alias": "TERMS_AND_CONDITIONS",
            "config": {},
            "defaultAction": false,
            "enabled": false,
            "name": "Terms and Conditions",
            "priority": 20,
            "providerId": "TERMS_AND_CONDITIONS"
        },
        {
            "alias": "UPDATE_PASSWORD",
            "config": {},
            "defaultAction": false,
            "enabled": true,
            "name": "Update Password",
            "priority": 30,
            "providerId": "UPDATE_PASSWORD"
        },
        {
            "alias": "UPDATE_PROFILE",
            "config": {},
            "defaultAction": false,
            "enabled": true,
            "name": "Update Profile",
            "priority": 40,
            "providerId": "UPDATE_PROFILE"
        },
        {
            "alias": "VERIFY_EMAIL",
            "config": {},
            "defaultAction": false,
            "enabled": true,
            "name": "Verify Email",
            "priority": 50,
            "providerId": "VERIFY_EMAIL"
        },
        {
            "alias": "delete_account",
            "config": {},
            "defaultAction": false,
            "enabled": false,
            "name": "Delete Account",
            "priority": 60,
            "providerId": "delete_account"
        },
        {
            "alias": "webauthn-register",
            "config": {},
            "defaultAction": false,
            "enabled": true,
            "name": "Webauthn Register",
            "priority": 70,
            "providerId": "webauthn-register"
        },
        {
            "alias": "webauthn-register-passwordless",
            "config": {},
            "defaultAction": false,
            "enabled": true,
            "name": "Webauthn Register Passwordless",
            "priority": 80,
            "providerId": "webauthn-register-passwordless"
        },
        {
            "alias": "update_user_locale",
            "config": {},
            "defaultAction": false,
            "enabled": true,
            "name": "Update User Locale",
            "priority": 1000,
            "providerId": "update_user_locale"
        }
    ],
    "requiredCredentials": [
        "password"
    ],
    "resetCredentialsFlow": "reset credentials",
    "resetPasswordAllowed": true,
    "revokeRefreshToken": false,
    "roles": {
        "client": {
            "account": [
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "47f21b69-3eec-4b73-a1c3-aecfef781b01",
                    "description": "${role_view-consent}",
                    "id": "7b9db40b-cd46-4cd0-b8cc-68a1ee9de93b",
                    "name": "view-consent"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "47f21b69-3eec-4b73-a1c3-aecfef781b01",
                    "description": "${role_delete-account}",
                    "id": "0f50b8cf-35c9-430a-a4b8-d5ca7c0bb117",
                    "name": "delete-account"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "47f21b69-3eec-4b73-a1c3-aecfef781b01",
                    "description": "${role_view-profile}",
                    "id": "dd68f691-d679-4ed6-8227-b53a6dd19c9d",
                    "name": "view-profile"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "47f21b69-3eec-4b73-a1c3-aecfef781b01",
                    "description": "${role_manage-account-links}",
                    "id": "b8d2df40-ef51-45c4-935b-fb7a06b32b80",
                    "name": "manage-account-links"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "view-consent"
                            ]
                        }
                    },
                    "containerId": "47f21b69-3eec-4b73-a1c3-aecfef781b01",
                    "description": "${role_manage-consent}",
                    "id": "05b6b105-13d2-455a-94d6-49ad2059355c",
                    "name": "manage-consent"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "47f21b69-3eec-4b73-a1c3-aecfef781b01",
                    "description": "${role_view-groups}",
                    "id": "16face41-083c-4966-96df-4cdc18d0727e",
                    "name": "view-groups"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "47f21b69-3eec-4b73-a1c3-aecfef781b01",
                    "description": "${role_view-applications}",
                    "id": "9bb0b4b8-4f6f-4d91-84fc-3025306a4198",
                    "name": "view-applications"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "manage-account-links"
                            ]
                        }
                    },
                    "containerId": "47f21b69-3eec-4b73-a1c3-aecfef781b01",
                    "description": "${role_manage-account}",
                    "id": "658e3030-b60a-495f-bc3d-fcaf22b79ae8",
                    "name": "manage-account"
                }
            ],
            "account-console": [],
            "admin-cli": [],
            "broker": [
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "221fa9eb-4e8c-4353-9334-6083c44aaa49",
                    "description": "${role_read-token}",
                    "id": "74070be8-a98b-427a-ad23-e3c17b19d2b2",
                    "name": "read-token"
                }
            ],
            "orkg-frontend": [],
            "realm-management": [
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_query-clients}",
                    "id": "bad4cee4-8c6f-406c-a052-19354e82397b",
                    "name": "query-clients"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_query-users}",
                    "id": "dce507fa-1e32-48b2-87fc-71d03c6bf748",
                    "name": "query-users"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_create-client}",
                    "id": "fa9e08b3-c082-4eaa-bf54-3465576fa210",
                    "name": "create-client"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_query-realms}",
                    "id": "75d27064-5811-420b-9ec0-a818d1e858a2",
                    "name": "query-realms"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_manage-clients}",
                    "id": "ed2634ff-f81a-4be0-8f1c-056b59d1fba9",
                    "name": "manage-clients"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_manage-authorization}",
                    "id": "50602b71-9822-4c36-bf5f-5719345027e9",
                    "name": "manage-authorization"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-clients"
                            ]
                        }
                    },
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_view-clients}",
                    "id": "22a127d3-4946-489b-9525-035abe931115",
                    "name": "view-clients"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_view-realm}",
                    "id": "b06d4dbf-53ba-4fe9-b6db-622aa547238f",
                    "name": "view-realm"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_view-events}",
                    "id": "95fe267e-a727-490f-81d9-f7a9d337ae36",
                    "name": "view-events"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_query-groups}",
                    "id": "31a6dcd9-43b8-492f-9b1c-caadf9676f53",
                    "name": "query-groups"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_manage-realm}",
                    "id": "19515909-6114-43e2-a7f8-ae3fa4c6ed02",
                    "name": "manage-realm"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_view-authorization}",
                    "id": "25a86c8b-5be8-4b13-b900-1f530344bfda",
                    "name": "view-authorization"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_manage-users}",
                    "id": "5756cccd-25da-472a-9e0d-581447878c12",
                    "name": "manage-users"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_impersonation}",
                    "id": "00ad982f-d8fe-4121-a280-ca80c7bc4ef0",
                    "name": "impersonation"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_manage-identity-providers}",
                    "id": "30f6cf6e-1ddf-4b0f-b708-b930189a46bc",
                    "name": "manage-identity-providers"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_manage-events}",
                    "id": "4fee1217-240b-4eb7-936a-36b32d5d12bb",
                    "name": "manage-events"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-clients",
                                "query-users",
                                "query-realms",
                                "create-client",
                                "manage-clients",
                                "view-clients",
                                "manage-authorization",
                                "view-realm",
                                "view-events",
                                "query-groups",
                                "manage-realm",
                                "view-authorization",
                                "manage-users",
                                "impersonation",
                                "manage-identity-providers",
                                "view-users",
                                "manage-events",
                                "view-identity-providers"
                            ]
                        }
                    },
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_realm-admin}",
                    "id": "bc358ecf-de75-44b3-b2ac-af9aa9fb4d5e",
                    "name": "realm-admin"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-users",
                                "query-groups"
                            ]
                        }
                    },
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_view-users}",
                    "id": "106b60de-22a0-4313-b204-da2425c7de91",
                    "name": "view-users"
                },
                {
                    "attributes": {},
                    "clientRole": true,
                    "composite": false,
                    "containerId": "5db5c203-6121-46ea-af37-ac07cfaec080",
                    "description": "${role_view-identity-providers}",
                    "id": "e6347475-64ff-4bc6-a5c0-7369d89ae386",
                    "name": "view-identity-providers"
                }
            ],
            "security-admin-console": []
        },
        "realm": [
            {
                "attributes": {},
                "clientRole": false,
                "composite": false,
                "containerId": "c6754611-056a-43ed-9e15-ad6b65406947",
                "description": "${role_offline-access}",
                "id": "209dd42c-a309-4edb-bb3c-7028f15a6c8f",
                "name": "offline_access"
            },
            {
                "attributes": {},
                "clientRole": false,
                "composite": false,
                "containerId": "c6754611-056a-43ed-9e15-ad6b65406947",
                "description": "${role_uma_authorization}",
                "id": "09ad29dd-79cc-4671-917d-ce0a0d571cd4",
                "name": "uma_authorization"
            },
            {
                "attributes": {},
                "clientRole": false,
                "composite": true,
                "composites": {
                    "client": {
                        "account": [
                            "view-profile",
                            "manage-account"
                        ]
                    },
                    "realm": [
                        "offline_access",
                        "uma_authorization"
                    ]
                },
                "containerId": "c6754611-056a-43ed-9e15-ad6b65406947",
                "description": "${role_default-roles}",
                "id": "d179d07f-8a6a-4ed4-9ac8-e69c72793bf4",
                "name": "default-roles-orkg-dev"
            }
        ]
    },
    "scopeMappings": [
        {
            "clientScope": "offline_access",
            "roles": [
                "offline_access"
            ]
        }
    ],
    "smtpServer": {
        "auth": "",
        "envelopeFrom": "",
        "from": "keycloak@orkg.internal",
        "fromDisplayName": "Development Keycloak, Realm orkg-dev",
        "host": "mailhog",
        "port": "1025",
        "replyTo": "",
        "replyToDisplayName": "",
        "ssl": "false",
        "starttls": "false"
    },
    "sslRequired": "external",
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionMaxLifespanRememberMe": 0,
    "supportedLocales": [
        "de",
        "en"
    ],
    "userManagedAccessAllowed": false,
    "verifyEmail": true,
    "waitIncrementSeconds": 60,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicyRpId": "",
    "webAuthnPolicySignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyUserVerificationRequirement": "not specified"
}
