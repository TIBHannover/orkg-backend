spring:
  data.web.pageable.max-page-size: 2500
  rdf:
    # Vocab prefix not used, still hard coded
    # might need to be copied to other profiles on deployment
    vocab-prefix: 'http://orkg.org/orkg'
    frontend-uri: 'http://localhost:3000'
  jmx:
    enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "${orkg.keycloak.host}/realms/${orkg.keycloak.realm}"
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=5000,expireAfterAccess=10m,recordStats
      overrides:
        metrics-name-and-parameters-to-number-cache: maximumSize=200,expireAfterAccess=5m,expireAfterWrite=5m
  mail:
    host: "localhost"
    port: 8025
    username: ""
    password: ""
    protocol: smtp
  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: never
orkg:
  mail:
    from:
      email: "no-reply@orkg.org"
      display-name: "ORKG - Open Research Knowledge Graph"
    reply-to:
      email: ""
      display-name: ""
  import:
    csv:
      enabled: true
  export:
    rdf:
      # cron schedule for the rdf-dump
      # use "-" to disable
      schedule: "-"
      file-name: rdf-export-orkg.nt
    unpublished-comparisons:
      # cron schedule for the unpublished comparisons export
      # use "-" to disable
      schedule: "-"
      file-name: comparisons.jsonl
    predicate-id-to-label:
      # cron schedule for the predicate id to label export
      # use "-" to disable
      schedule: "-"
      file-name: predicate-ids_to_label.json
    users:
      file-dir: "."
      target-realm: "orkg"
  ranking:
    papers:
      # cron schedule for paper-ranking
      # use "-" to disable
      schedule: "-"
      workers: 10
      chunk-size: 1000
      log-file: 'paper-ranking.log'
  init:
    setup:
      directory: 'data'
  datacite:
    username: ""
    password: ""
    doiPrefix: "10.7484"
    url: "https://api.test.datacite.org/dois"
    publish: "draft"
  publishing:
    base-url:
      paper: "http://localhost/paper/"
      comparison: "http://localhost/comparison/"
      smart-review: "http://localhost/review/"
  simcomp:
    host: "http://localhost:4321"
    api-key: "K3Y-4CC3SS"
  external-services:
    geonames:
      host: "https://secure.geonames.org"
      username: "demo"
    ols:
      host: "https://api.terminology.tib.eu/api/v2"
    wikidata:
      host: "https://www.wikidata.org"
  keycloak:
    host: "http://localhost:8888"
    realm: "orkg"
    client-id: "admin-cli"
    client-secret: "**********"
    event-poll-schedule: "*/1 * * * * *"
    event-poll-chunk-size: 50
  oauth:
    legacy-client-id: "orkg-client"
    legacy-client-secret: "secret"
    token-endpoint: "${orkg.keycloak.host}/realms/${orkg.keycloak.realm}/protocol/openid-connect/token"
    registration-endpoint: "${orkg.keycloak.host}/realms/${orkg.keycloak.realm}/clients-registrations/openid-connect"
  concurrent:
    task-scheduler-thread-pool-size: 3
    job-executor-thread-pool-size: 2
  handles:
    prefix: "20.500.14488"
    admin-handle: "20.500.14488/ADMIN"
    key-index: 300
    password: ""
  snapshots:
    resources:
      url-templates:
        backend: "https://orkg.org/api/resources/{id}/snapshots/{snapshotId}"
        frontend: "https://orkg.org/resources/{id}/snapshots/{snapshotId}"
management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health,info,jolokia,liquibase,loggers,env,metrics
    jmx:
      exposure:
        include: '*'
  endpoint:
    env:
      enabled: true
    health:
      enabled: true
    info:
      enabled: true
    jolokia:
      enabled: true
    liquibase:
      enabled: true
    loggers:
      enabled: true
    metrics:
      enabled: true
hawtio:
  authenticationEnabled: false
org:
  neo4j:
    migrations:
      packages-to-scan:
        - "org.orkg.migrations.neo4j"
---
spring:
  config:
    activate:
      on-profile:
        - development
  neo4j:
    uri: 'bolt://localhost:7687'
  datasource:
    url: 'jdbc:postgresql://localhost/postgres'
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    # generate-ddl: true
logging:
  level:
    org.springframework.data.neo4j: DEBUG
    # Transaction logging
    #org.springframework.transaction: TRACE
    #org.springframework.orm.jpa: TRACE
    #org.springframework.data.neo4j.core.transaction: TRACE
